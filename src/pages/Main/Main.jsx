import React, { useEffect } from 'react'
import { useDispatch } from 'react-redux'
import { Link } from 'react-router-dom'
import { getDatabase, ref, child, get } from 'firebase/database'
import * as S from './styles'
import SaleStiker from '../../components/SaleStiker/SaleStiker'
import Card from '../../components/Card/Card'
import Button from '../../components/Button/Button'
import { getCourses } from '../../store/slices/coursesSlices'
import { useCourses } from '../../hooks/use-courses'

function Main() {
  const dispatch = useDispatch()
  const { isCourses, courses } = useCourses()
  /// /////////////////////////////////////////

  /* –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –∫—É—Ä—Å–æ–≤ courses,–ø—É—Ç–µ–º –µ–≥–æ –æ–±—Ö–æ–¥–∞ –∏ —Ä–µ–Ω–¥–µ—Ä–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ –¥–∞–Ω–Ω—ã–º  */
  // –Ω–∞–∑–≤–∞–Ω–∏—è –∫—É—Ä—Å–æ–≤ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å —Ç–∞–∫, –ø—Ä–∏–º–µ—Ä console.log(courses[0].nameRu)
  // –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –Ω—É–∂–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –∫—É—Ä—Å–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–≥–ª –∏–º—è,–µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –Ω–∞–∑–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –ø–∞–ø–∫–µ images, –ø—Ä–∏–º–µ—Ä  console.log(courses[0].nameEng)
  /// ////////////////////////////////////////////
  /// —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤–æ–Ω–æ—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å—Ç–æ—Ä–µ –ø–æ –∫—É—Ä—Å–∞–º –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ main
  useEffect(() => {
    const dbRef = ref(getDatabase())

    get(child(dbRef, `courses/`))
      .then((snapshot) => {
        if (snapshot.exists()) {
          const data = snapshot.val()

          dispatch(
            getCourses({
              courses: data,
            })
          )
        }
      })
      .catch((error) => {
        console.error(error)
      })
  }, [])

  const UpWindow = () => {
    window.scrollTo({
      top: 0,
      left: 0,
      behavior: 'smooth',
    })
  }

  return (
    <div>
      <S.Main>
        <S.MainSubTitle>–û–Ω–ª–∞–π–Ω-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è –∑–∞–Ω—è—Ç–∏–π –¥–æ–º–∞</S.MainSubTitle>
        <S.MainTitle>
          –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º –∏ —É–ª—É—á—à–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏
        </S.MainTitle>
        <SaleStiker />
        <S.MainCards>
          {isCourses
            ? courses.map((item, i) => (
                <Link to={`/courses/${i}`}>
                  <Card
                    key={item.id}
                    titleCard={item.nameRu}
                    back={`card-${item.nameEng}`}
                  />
                </Link>
              ))
            : '–ö—É—Ä—Å–æ–≤ –µ—â–µ –Ω–µ—Ç!'}
        </S.MainCards>
        <Button callback={UpWindow} isGreen buttonName="–ù–∞–≤–µ—Ä—Ö ü†ï" />
      </S.Main>
    </div>
  )
}

export default Main
