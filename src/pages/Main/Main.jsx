import React, {useEffect} from 'react'
import SaleStiker from '../../components/SaleStiker/SaleStiker'
import Card from '../../components/Card/Card'
import * as S from './styles'
import { useDispatch } from 'react-redux'
import { useNavigate } from 'react-router-dom'
import { getCourses } from '../../store/slices/coursesSlices'
import { useCourses } from '../../hooks/use-courses'
import { getDatabase, ref, child, get } from 'firebase/database'
import Button from '../../components/Button/Button'
import cardBody from '../../components/Card/images/card-body.png'
import cardDance from '../../components/Card/images/card-dance.png'
import cardStep from '../../components/Card/images/card-step.png'
import cardStretch from '../../components/Card/images/card-strench.png'
import cardYoga from '../../components/Card/images/card-yoga.png'

function Main() {
  const navigate = useNavigate()
  const dispatch = useDispatch()
  const { isCourses, courses } = useCourses()
  /// /////////////////////////////////////////

  /* –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –∫—É—Ä—Å–æ–≤ courses,–ø—É—Ç–µ–º –µ–≥–æ –æ–±—Ö–æ–¥–∞ –∏ —Ä–µ–Ω–¥–µ—Ä–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ –¥–∞–Ω–Ω—ã–º  */
  // –Ω–∞–∑–≤–∞–Ω–∏—è –∫—É—Ä—Å–æ–≤ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å —Ç–∞–∫, –ø—Ä–∏–º–µ—Ä console.log(courses[0].nameRu)
  // –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –Ω—É–∂–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –∫—É—Ä—Å–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–≥–ª –∏–º—è,–µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –Ω–∞–∑–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –ø–∞–ø–∫–µ images, –ø—Ä–∏–º–µ—Ä  console.log(courses[0].nameEng)
  /// ////////////////////////////////////////////
  /// —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤–æ–Ω–æ—á–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Å—Ç–æ—Ä–µ –ø–æ –∫—É—Ä—Å–∞–º –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ main
  useEffect(() => {
    const dbRef = ref(getDatabase())

    get(child(dbRef, `courses/`))
      .then((snapshot) => {
        if (snapshot.exists()) {
          const data = snapshot.val()

          dispatch(
            getCourses({
              courses: data,
            })
          )
        } else {
          console.log('No data available')
        }
      })
      .catch((error) => {
        console.error(error)
      })
  }, [])
  const UpWindow = () => {
    window.scrollTo({
      top: 0,
      left: 0,
      behavior: 'smooth',
    })
  }
 

  const cardMockData = [
    {
      id: 1,
      title: '–ô–æ–≥–∞',
      image: cardYoga,
    },
    {
      id: 2,
      title: '–°—Ç—Ä–µ—Ç—á–∏–Ω–≥',
      image: cardStretch,
    },
    {
      id: 3,
      title: '–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å',
      image: cardDance,
    },
    {
      id: 4,
      title: '–°—Ç–µ–ø-–∞—ç—Ä–æ–±–∏–∫–∞',
      image: cardStep,
    },
    {
      id: 5,
      title: '–ë–æ–¥–∏—Ñ–ª–µ–∫—Å',
      image: cardBody,
    },
  ]

  return (
    <S.Main>
      <S.MainSubTitle>–û–Ω–ª–∞–π–Ω-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è –∑–∞–Ω—è—Ç–∏–π –¥–æ–º–∞</S.MainSubTitle>
      <S.MainTitle>
        –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º –∏ —É–ª—É—á—à–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏
      </S.MainTitle>
      {/* <SaleStiker /> –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ 1 —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∏–≥–¥–µ –Ω–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ª—É—á—à–µ –Ω–µ –¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}
      <SaleStiker />

      <S.MainCards>
        {cardMockData?.map((element, i) => (
          <Card
            titleCard={element.title}
            cardImage={element.image}
            key={element.id}
            onClick={() => navigate(`/courses/${i}`)}
          />
        ))}
      </S.MainCards>
      <Button callback={UpWindow} isGreen buttonName="–ù–∞–≤–µ—Ä—Ö ü†ï" />
    </S.Main>
  )
}

export default Main
